{"version":3,"sources":["webpack:///./src/app/services/highscore.service.ts","webpack:///./src/app/services/board.factory.service.ts","webpack:///./src/app/services/game.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/views/board.component.ts","webpack:///./src/app/views/score.component.ts","webpack:///./src/app/views/tile.component.ts","webpack:///./src/app/views/board.component.css","webpack:///./src/app/views/board.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {Game} from './game.service';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\n\nexport class Entry\n{\n    constructor(private playerName:string,private result:Game)\n    {\n\n    }\n\n    getName()\n    {\n        return this.playerName;\n    }\n\n    getScore()\n    {\n        return this.result;\n    }\n\n    getScoreString():string\n    {\n        return \"level: \"+this.result.level+\": \"+this.result.result+\"% of tiles\"\n    }\n\n    equals(other:Entry):number\n    {\n        if(other == undefined)\n        {\n            return -1;\n        }\n\n        if(this.result.level < other.result.level)\n        {\n            return 1;\n        }\n\n        if(this.result.level > other.result.level)\n        {\n            return -1;\n        }\n\n        //level is the same. compare tiles completed\n\n        if(this.result.result > other.result.result)\n        {\n            return -1;\n        }\n\n        if(this.result.result < other.result.result)\n        {\n            return 1;\n        }\n\n        return 0;\n\n    }\n}\n\n@Injectable()\nexport class HighscoreService\n{\n    board:Entry[] = [];\n    currentHighscore: BehaviorSubject<Entry[]>; \n\n    constructor()\n    {\n        this.currentHighscore = new BehaviorSubject<Entry[]>([]);\n    }\n\n    getCurrentHighscores():Observable<Entry[]>\n    {\n        return this.currentHighscore.asObservable();\n    }\n\n    save(name:string, gameResult:Game):boolean\n    {\n        if(name == undefined || name.length == 0 || gameResult == undefined || gameResult.level < 0 || gameResult.result < 0 \n        || gameResult.result > 100)\n        {\n            return false;\n        }\n        console.log(\"HighscoreService#save highscore for player \"+name);\n\n        var entry:Entry = new Entry(name,gameResult);\n\n        this.board.push(entry);\n        this.board.sort(this.compare);\n\n        this.currentHighscore.next(this.board);\n\n        return true;\n    }\n\n    compare(a:Entry,b:Entry):number\n    {\n        return a.equals(b);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/highscore.service.ts","import{Injectable} from '@angular/core';\nimport {TileModel} from '../views/tile.component';\n\nexport class Row\n{\n    public tiles:TileModel[] = [];\n}\n\n\n@Injectable()\nexport class BoardFactory\n{\n\n\ngetBoard(size:number):Row[]\n{\nif(size < 4)\n{\n    return undefined;\n}\n\n var rows:Row[] = [];\n\n  console.log(\"creating new Field with size: \"+size)\n\n  for(var i = 0; i < size ;i ++)\n  {\n    var row:Row = new Row();\n    for(var y = 0; y < size; y++)\n    {\n      var tile = {state:0,id:i+\"+\"+y};\n      row.tiles.push(tile);\n    }\n\n    rows.push(row);\n  }\n\nreturn rows;\n}\n\ncreateNewPath(board:Row[]):TileModel[]\n{\n let path:TileModel[] = [];\n\n if(board == undefined)\n {\n    return path;\n }\n\n var currentIndex:number = this.getRandomNumber(board.length-1);\n \n for(let i = 0; i < board.length;i++)\n {\n   board[i].tiles[currentIndex].state = 1;\n   path.push(board[i].tiles[currentIndex]);\n   if(i == board.length-1)\n   {\n       break;\n   }\n\n   let row:Row = board[i]; \n    while(1)\n    {\n        var nextIndex = this.determineNextField(currentIndex,row.tiles,i>0?board[i-1].tiles:undefined);\n        console.log(\"createPath next index: \"+nextIndex);\n        \n        if(currentIndex == nextIndex)\n        {\n            break;\n        }\n        row.tiles[nextIndex].state = 1;\n        path.push(row.tiles[nextIndex]);\n        currentIndex = nextIndex;\n    }\n }\n\n console.log(\"createPath new path with \"+path.length+\" steps\");\n return path;\n}\n\nprivate determineNextField(currentTile:number,row:TileModel[],lastRow:TileModel[]):number\n{\n    var possibilities:number[] = [];\n\n    //this represents the next row\n    possibilities.push(currentTile);\n\n    //check the left neighbor\n    if((currentTile - 1) >= 0 && row[currentTile -1].state == 0)\n    {\n        if(lastRow == undefined || lastRow[currentTile - 1].state == 0)\n        {\n            possibilities.push(currentTile-1);\n        }\n    }\n\n    //check the right neighbor\n    if((currentTile + 1) < row.length && row[currentTile +1].state == 0)\n    {\n        if(lastRow == undefined || lastRow[currentTile + 1].state == 0)\n        {\n        possibilities.push(currentTile+1);\n        }\n    }\n\n    var action:number = this.getRandomNumber(possibilities.length-1);\n\n    return possibilities[action];\n   \n}\n\nprivate getRandomNumber(max:number):number\n{\n    return Math.round((Math.random() * max));\n}\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/board.factory.service.ts","import{Injectable} from '@angular/core';\nimport {Tile,TileModel} from '../views/tile.component';\nimport {BoardFactory,Row} from './board.factory.service';\nimport {Observable} from 'rxjs/Observable';\n\nexport const GAME_STATE =\n{\n   INIT:\"init\",\n   ROUND_RUNNING_SHOW:\"runningShow\",\n   ROUND_RUNNING_USERACTION:\"runningUser\",\n   ROUND_FINISHED:\"rFinished\",\n   GAME_FINISHED:\"gameFinished\"\n   \n}\n\nexport class Game\n{\n  state:string;\n  level:number;\n  result:number;\n  rows:Row[];\n\n  constructor()\n  {\n    this.level = 0;\n    this.state = GAME_STATE.INIT;\n  }\n}\n\n@Injectable()\nexport class GameService\n{\n\nconstructor(private factory:BoardFactory)\n{\n\n}\n\npath:TileModel[];\ntotalPathLength:number;\nactiveGame:Game = new Game();\n\ngetActiveGame()\n{\n    return this.activeGame;\n}\n\nstartNewGame()\n{\n    this.activeGame = new Game();\n    let rows = this.startNextRound();\n    this.activeGame.rows = rows;\n\n    return this.activeGame;\n}\n\nresetAll()\n{\n    this.activeGame = new Game();\n    this.activeGame.rows = [];\n    return this.activeGame;\n}\n\n/**\n * starts a round by\n * - increasing the level\n * - generate the game field\n * - generate a random path on the board\n * - show the path the user for an amount of time\n * - hand control to the user\n */\nstartNextRound():Row[]\n{\n    console.log(\"GameService#start a new game\");\n    \n    this.activeGame.level++;\n    this.activeGame.state = GAME_STATE.ROUND_RUNNING_SHOW;\n    var size:number = this.activeGame.level + 3;\n    \n    var board:Row[] = this.factory.getBoard(size);\n    this.activeGame.rows = board;\n    this.path = this.factory.createNewPath(board);\n    this.totalPathLength = this.path.length;\n\n    setTimeout(() =>{\n    console.log(\"GameService#fire timer. hide tiles\");\n        for(var i = 0; i < this.path.length;i++)\n        {\n            this.path[i].state = 0; \n        }\n         this.activeGame.state = GAME_STATE.ROUND_RUNNING_USERACTION;\n\n\n    },5500 - (this.activeGame.level*500));\n\n    return board;\n}\n\nuserAction(tile:Tile)\n{\n    if(this.activeGame.state != GAME_STATE.ROUND_RUNNING_USERACTION)\n    {\n        return;\n    }\n\n    console.log(\"User tried tile with id: \"+tile.id+\" and state \"+tile.state);\n    \n    if(this.path[this.path.length-1].id === tile.id)\n    {\n        console.log(\"User clicked the right tile\");\n        this.path.pop().state = 2;\n        tile.state = 2;\n\n        if(this.path.length == 0)\n        {\n            this.activeGame.state = GAME_STATE.ROUND_FINISHED;\n        }\n    }\n    else\n    {\n        tile.state = 3;\n        let rowcol:string[] = tile.id.split(\"+\");\n        this.activeGame.rows[Number(rowcol[0])].tiles[Number(rowcol[1])].state = 3;\n        this.activeGame.result = Math.round((((this.totalPathLength - this.path.length)/this.totalPathLength)*100));\n        this.activeGame.state = GAME_STATE.GAME_FINISHED;  \n    }\n\n}\n\ngetCurrentPath():TileModel[]\n{\n    return this.path;\n}\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/game.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 369;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 369\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import{Component} from '@angular/core';\nimport {RouterModule} from '@angular/router';\n\n@Component({\n  selector: 'pathfindr-app',\n  template: `\n  <div class=\"header\">\n  <h1>Welcome to PathFindr</h1>\n  <a routerLink=\"/\">board</a>\n  <a routerLink=\"/scoreboard\">highscores</a>\n  </div>\n  <router-outlet margin-top=\"20pt\"></router-outlet>`,\n  styles:[`\n\n.header\n{\n  border-bottom: 1px solid;\n  margin:-15px auto 0 auto;\n  padding-top:10px;\n  text-align:center;\n  background-color:#eef;\n}\n\na\n{\n\nfont-size:20px;\n}\n\n`]\n})\nexport class AppComponent\n{\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule }   from '@angular/forms';\nimport { RouterModule }   from '@angular/router';\n\nimport { AppComponent }  from './app.component';\nimport {BoardComponent} from './views/board.component';\nimport {Tile} from './views/tile.component';\nimport {GameService} from './services/game.service';\nimport {BoardFactory} from './services/board.factory.service';\nimport {HighscoreService} from './services/highscore.service';\nimport {Scoreboard} from './views/score.component';\n\n@NgModule({\n  imports:      [ BrowserModule,FormsModule,\n  RouterModule.forRoot([\n  {\n    path: 'scoreboard',\n    component: Scoreboard\n  },\n    {\n    path: '',\n    component: BoardComponent\n  }\n])],\n  declarations: [ AppComponent,BoardComponent,Tile,Scoreboard ],\n  providers: [GameService,BoardFactory,HighscoreService],\n  bootstrap:    [ AppComponent ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component,OnInit } from '@angular/core';\nimport {Tile,TileModel} from '../views/tile.component';\nimport {GameService,Game} from '../services/game.service';\nimport {HighscoreService} from '../services/highscore.service';\n\n@Component({\n  selector: 'board',\n  templateUrl:'./board.component.html',\n  styleUrls:['./board.component.css']\n  ,\n})\nexport class BoardComponent implements OnInit \n{ \n\nrows = new Array();\ntileSize:number;\nactiveGame:Game;\nplayerName:string;\nplaceholder:string = \"enter your name\";\nsolving:boolean;\n\nconstructor(private gameService:GameService,private highscoreService:HighscoreService)\n{\n\n}\n\nngOnInit()\n{\n  this.activeGame = this.gameService.getActiveGame();\n  \n  if(this.activeGame.rows != undefined)\n  {\n  this.rows = this.activeGame.rows;\n  this.tileSize = 100/(this.rows.length) -5;\n  }\n}\n\ntileClicked(tile:Tile)\n{\n  this.gameService.userAction(tile);\n}\n\nstartNewGame()\n{\n  this.activeGame  = this.gameService.startNewGame();\n  this.rows = this.activeGame.rows;\n  this.tileSize = 100/(this.rows.length) -5;\n\n}\n\ncontinueGame()\n{\n  this.rows = this.gameService.startNextRound();\n  this.tileSize = 100/(this.rows.length) -5;\n}\n\nsave()\n{\n    if(this.highscoreService.save(this.playerName,this.activeGame))\n    {\n      this.activeGame = this.gameService.resetAll();\n      this.rows = this.activeGame.rows;\n      this.placeholder = \"enter your name please\"\n    }\n    else{\n      this.placeholder = \"enter your name please!!!!!!!!!!!!!!!\"\n    }\n}\n\nsolve()\n{\n   this.solving = true;\n   let path:TileModel[] = this.gameService.getCurrentPath();\n\n    var interval = setInterval(() => {\n\n      if(path.length == 0)\n      {\n        this.solving = false; \n        clearInterval(interval);\n        return;\n      }\n\n      let t = path[path.length-1];\n      this.gameService.userAction({id:t.id,state:0,tileClicked:undefined,getColor:undefined,tileClick:undefined});\n      \n    },1500);\n\n}\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/board.component.ts","import {Component,OnInit} from '@angular/core';\nimport {HighscoreService,Entry} from '../services/highscore.service';\n\n\n\n\n@Component\n({\n    selector:'score',\n    template:`\n\n    <div class=\"container\">\n    <h1>the best of the best<h1>\n    <div class=\"scorebox\">\n        <ol>\n        <li *ngFor=\"let item of entries\" [style.font-size.%]=\"'50'\">\n        {{item.getName()}}: {{item.getScoreString()}}\n        </li>\n        </ol></div>\n    `,\n    styles:[`\n        .scorebox\n        {\n            width:50%;\n            margin: 0 auto 0 auto;\n        }\n\n        .container\n        {\n            text-align:center;\n        }\n    `]\n\n})\nexport class Scoreboard implements OnInit\n{\n    entries:Entry[] = [];\n\n    constructor(private highscoreService:HighscoreService)\n    {\n        console.log(\"Scoreboard constructor called\");      \n    }\n\n    ngOnInit()\n    {\n        this.highscoreService.getCurrentHighscores().subscribe((scores:Entry[]) => \n        {\n        console.log(\"Scoreboard#onAcoreChanged length: \"+scores.length)\n        this.entries = scores;\n\n        for(let i = 0; i < this.entries.length; i++)\n        {\n            console.log(i+\": \"+this.entries[i].getName());\n        }\n        });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/score.component.ts","import { Component,Input,Output,EventEmitter } from '@angular/core';\n\nexport class TileModel\n{\n    id:string;\n    state:number;\n}\n\n@Component({\n  selector: 'tile',\n  template: `<div [ngClass]=\"['singleTile' , getColor()]\" (click)=\"tileClicked()\"></div>`,\n  styles:[`\n\n  .singleTile\n  {\n      height:100%;\n      transition:background-color 1s;\n  }\n\n  .grey\n  {\n      background-color:grey;\n  }\n    .red\n  {\n      background-color:red;\n  }\n    .green\n  {\n      background-color:green;    \n  }\n    .orange\n  {\n      background-color:orange;\n  }\n\n  `]\n})\nexport class Tile\n{\n  @Input()\n  id:string;\n\n  @Input()\n  state:number;\n  \n  @Output()\n  tileClick:EventEmitter<Tile> = new EventEmitter();\n\n  getColor()\n  {\n      if(this.state == 0)\n      {\n          return \"grey\";\n      }\n\n      if(this.state == 1)\n      {\n          return \"orange\";\n      }\n\n      if(this.state == 2)\n      {\n          return \"green\";\n      }\n\n      if(this.state == 3)\n      {\n          return \"red\";\n      }\n  }\n    \n\n    tileClicked()\n    {\n        this.tileClick.emit(this);\n    }\n\n}\n\n \n\n\n// WEBPACK FOOTER //\n// ./src/app/views/tile.component.ts","module.exports = \".box{\\n    width:80%;\\n    height:100%;\\n    margin-left:15%;\\n    margin-top:20pt;\\n    white-space: nowrap;\\n  }\\n\\n  .cell{\\n  display:inline-block;\\n  border-style:groove;\\n  height:100%;\\n}\\n\\n.level\\n{\\n  float:left;\\n  width:110px;\\n}\\n\\n.next\\n{\\n  width:100%;\\n  display:inline-block;\\n  text-align:center;\\n}\\n\\n.left-box\\n{\\n  float:left\\n}\\n\\n.left-box-2\\n{\\n  float:left;\\n  padding-left:20pt;\\n}\\n\\n.button {\\n    color: black;\\n    font-family: Helvetica, sans-serif;\\n    font-size:100%;\\n    background: #e7e7e7;\\n    border: 1px solid;\\n    box-shadow: inset 0 0 0 1px #cdeffb;\\n    padding:4px;\\n    -webkit-transition:all 0.4s;\\n    transition:all 0.4s;\\n}\\n\\n.button:disabled\\n{\\n    background: #aaaaaa;\\n    color:#779\\n}\\n\\n.button:hover\\n{\\n  color: #fff;\\n  background: #555555;\\n}\\n\\n.start\\n{\\n  margin-top:10px;\\n  text-align:center;\\n}\\n\\n.overlay\\n{\\n  position:absolute;\\n  top:89px;\\n  left:0;\\n  width:100%;\\n  height:150%;\\n  background-color:#adafce;\\n}\\n\\n.dialog\\n{\\n  border-radius:25px;\\n  text-align:center;\\n  position:absolute;\\n  top:120px;;\\n  left:30%;\\n  border:1px solid;\\n  background-color:#e4e4e4;\\n  width:350px;\\n  height:200px;\\n  z-index:1;\\n  \\n}\\n\\n.overlay, .dialog\\n{\\n  opacity: 0;\\n  visibility: hidden;\\n  -webkit-transition:all 0.6s;\\n  transition: all 0.6s;\\n}\\n\\n.overlay.active\\n{\\n  opacity: 0.8;\\n  visibility: visible;\\n}\\n\\n.dialog.active\\n{\\n  opacity: 1;\\n  visibility: visible;\\n}\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/board.component.css\n// module id = 643\n// module chunks = 1","module.exports = \"   \\n  <div *ngIf=\\\"activeGame.state == 'init'\\\" class=\\\"start\\\">\\n  <button (click)=\\\"startNewGame() \\\" class=\\\"button\\\">hit me to start!</button>\\n  </div>\\n\\n   <div class=\\\"level\\\" *ngIf=\\\"activeGame.state != 'init'\\\">Your on level {{activeGame.level}}</div>\\n\\n   <div *ngIf=\\\"activeGame.state == 'rFinished'\\\" class=\\\"next\\\">\\n    <button class=\\\"button\\\" (click)=\\\"continueGame()\\\">wuhuu go on with level {{activeGame.level+1}}</button>\\n   </div>\\n  \\n  <div class=\\\"box\\\" *ngIf=\\\"activeGame.state == 'runningShow' || activeGame.state == 'runningUser'|| activeGame.state == 'gameFinished'\\\">\\n  <div [style.height.%]=\\\"tileSize\\\" *ngFor=\\\"let row of rows\\\">\\n    <tile [state]=\\\"tile.state\\\" [id]=tile.id class=\\\"cell\\\" [style.width.%]=\\\"tileSize\\\" (tileClick)=\\\"tileClicked($event)\\\" *ngFor=\\\"let tile of row.tiles\\\">\\n    </tile>\\n  </div>\\n  <div [style.margin-top.pt]=\\\"'15'\\\" *ngIf=\\\"activeGame.state == 'runningUser'\\\">uhhh thats too hard. <button [disabled]=\\\"solving\\\" class=\\\"button\\\" (click)=\\\"solve()\\\">Win the game for me</button></div>\\n  </div>\\n\\n\\n  <div [ngClass]=\\\"{'overlay':true,'active':activeGame.state == 'gameFinished' }\\\"></div>\\n\\n  <div [ngClass]=\\\"{'dialog':true,'active':activeGame.state == 'gameFinished' }\\\">\\n   <p>OH NO that was wrong.</p>\\n    <div>You reached level: {{activeGame.level}} with {{activeGame.result}}% correct Tiles</div>\\n    <div>Save your highscrore for eternity: <input [(ngModel)]=\\\"playerName\\\" placeholder=\\\"{{placeholder}}\\\"/></div>\\n    <button class=\\\"button\\\" (click)=\\\"save()\\\">save</button>\\n    or <button class=\\\"button\\\" (click)=\\\"startNewGame()\\\" >try again :) </button><br/>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/board.component.html\n// module id = 644\n// module chunks = 1"],"sourceRoot":""}